#!/bin/bash
# This script will create a digital signature for a stack image. The signature is written to
# a temporary file (base64 encoded) so that it is accessable to other scripts. It uses the
# Usage: sign-image <image file name> <signature file name> <private key file>
# Preconditions: The environment variable SIGNING_KEY_PASSWORD should be defined and contain the passphrase
# for the private key.

if [ "$#" -ne 3 ]; then

    if [ ! -e "$1" ]; then
        echo "Image file name parameter (1) is missing."
    fi

    if [ ! -e "$2" ]; then
        echo "Signature file name parameter (2) is missing."
    fi

    if [ ! -e "$3" ]; then
        echo "Private key file parameter (3) is missing."
    fi

    echo "Usage: sign-image <image file name> <signature file name> <private key file> "
    exit 1
fi

# Create digital signature
binary_sig_file=$(mktemp /tmp/sig.XXXXXX)
trap "{ rm -f $binary_sig_file; }" EXIT

openssl dgst -sha256 -sign "$3" -passin env:SIGNING_KEY_PASSWORD "$1" > "$binary_sig_file"
# Base 64 encode the signature and write encoded signature to a file
openssl enc -a -e -out "$2" -in "$binary_sig_file"
